on:
  workflow_dispatch:
  workflow_call:

defaults:
  run:
    shell: bash

env:
  DEVTOOLS_COLOR: always
  FORCE_COLOR: 1

jobs:
  src:
    strategy:
      fail-fast: false
      matrix:
        package:
          - gnome-shell-extension-ddterm
          - gnome-shell-extension-ddterm-git

    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/archlinux/archlinux:base-devel

    steps:
    - run: pacman -Syu --noconfirm --noprogressbar --color=always git
    - run: useradd -m builduser

    - uses: actions/checkout@v4
    - run: git config --global --replace-all safe.directory "$GITHUB_WORKSPACE"
    - run: chown -R builduser .

    - run: sudo -u builduser makepkg --printsrcinfo >.SRCINFO
      working-directory: ${{ matrix.package }}

    - run: git diff --exit-code .SRCINFO
      working-directory: ${{ matrix.package }}

    - run: sudo -u builduser makepkg --allsource
      working-directory: ${{ matrix.package }}

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.package }}-src
        path: ${{ matrix.package }}/*.src.tar.*
        if-no-files-found: error

  package:
    strategy:
      fail-fast: false
      matrix:
        package:
          - gnome-shell-extension-ddterm
          - gnome-shell-extension-ddterm-git

    needs: src
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/archlinux/archlinux:base-devel
      options: --privileged --tmpfs /run

    steps:
    - run: sed -i '/^NoExtract/d' /etc/pacman.conf
    - run: echo "$REPO_CONFIG" >> /etc/pacman.conf
      env:
        REPO_CONFIG: |
          [ddterm]
          SigLevel = Never
          Server = https://ddterm.github.io/aur

    - run: pacman -Syu --noconfirm --noprogressbar --color=always devtools
    - run: systemd-machine-id-setup
    - run: useradd -m builduser
    - run: echo "$GITHUB_WORKSPACE/.github/bin" >> "$GITHUB_PATH"

    - uses: actions/checkout@v4
    - run: git config --global --replace-all safe.directory "$GITHUB_WORKSPACE"

    - uses: actions/download-artifact@v4
      with:
        path: ${{ matrix.package }}
        name: ${{ matrix.package }}-src

    - run: tar xvf ${{ matrix.package }}/*.src.tar.*
    - run: chown -R builduser .

    - run: mkarchroot -C /etc/pacman.conf -M /etc/makepkg.conf /var/tmp/root base-devel
    - run: makechrootpkg -r /var/tmp -c -n -C -U builduser -- --holdver
      working-directory: ${{ matrix.package }}

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.package }}-pkg
        path: |
          ${{ matrix.package }}/*.pkg.tar.*
          ${{ matrix.package }}/*.log
        if-no-files-found: error
      if: always()

  installed-test:
    strategy:
      fail-fast: false
      matrix:
        package:
          - gnome-shell-extension-ddterm
          - gnome-shell-extension-ddterm-git

    needs: package
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/archlinux/archlinux:base-devel
      options: --privileged --tmpfs /run

    steps:
    - run: pacman -Syu --noconfirm git
    - run: systemd-machine-id-setup
    - run: useradd -m builduser

    - uses: actions/checkout@v4
      with:
        sparse-checkout: installed-test

    - uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.package }}-src

    - uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.package }}-pkg

    - run: rm -v *.log
    - run: pacman --noconfirm -U *.pkg.tar.*
    - run: tar xf *.src.tar.*
    - run: chown -R builduser .
      working-directory: ${{ matrix.package }}
    - run: sudo -u builduser makepkg --nobuild --holdver --nodeps
      working-directory: ${{ matrix.package }}
    - run: "$GITHUB_WORKSPACE/installed-test/$PACKAGE_NAME.sh"
      working-directory: ${{ matrix.package }}/src
      env:
        PACKAGE_NAME: ${{ matrix.package }}

  repo:
    needs: package
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/archlinux/archlinux:base

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: repo
          pattern: '*-pkg'
          merge-multiple: true

      - run: rm *.log
        working-directory: repo

      - run: repo-add ddterm.db.tar.zst *.pkg.tar.*
        working-directory: repo

      - uses: actions/upload-pages-artifact@v3
        with:
          path: repo
